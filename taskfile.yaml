# yaml-language-server: $schema=https://taskfile.dev/schema.json
# https://taskfile.dev

version: "3"

vars:
  RUN: msys2 -no-start -here -mingw64 -shell bash -c

tasks:
  default:
    cmds:
      - task: build

  prepare:
    cmds:
      - cmd: git checkout -- README.md THANKS.md WHATSNEW.md GUIDELINES.md

  build:
    deps: [packages]
    vars:
      CONFIG: use-libcu8=1
    cmds:
      - task: command
        vars: { CMD: rm -f femto-config.mk config.c config.h femto-subst femto-test.out }
      - task: command
        vars: { CMD: 'make config {{.CONFIG}}' }
      - task: command
        vars: { CMD: 'make {{.CONFIG}}' }
      - task: command
        vars: { CMD: 'make dist --keep-going {{.CONFIG}}' }

  packages:
    vars:
      ENV: x86_64
    cmds:
      - task: command
        vars:
          CMD: |
            pacman -S --needed \
              base-devel msys2-devel \
              libgpgme-devel libsasl-devel libgdbm-devel \
              ncurses-devel libgnutls-devel libidn-devel \
              openssl-devel \
              git zip \
              mingw-w64-{{.ENV}}-toolchain \
              mingw-w64-{{.ENV}}-dlfcn

  command:
    requires:
      vars: [CMD]
    cmds:
      - cmd: >-
          {{.RUN}} "CFLAGS='-O2 -s' LDFLAGS='-O2 -static -s' {{.CMD}}"

  run:
    deps: [msbuild]
    cmds:
      - cmd: ./x64/Debug/tea.exe {{.CLI_ARGS}}

  test:
    deps: [msbuild]
    silent: true
    vars:
      TEA_EXE: ./x64/Debug/tea.exe
      TEST: '{{splitArgs .CLI_ARGS | first | default "hello"}}'
    sources:
      - ./x64/Debug/tea.exe
      - ./tests/tea/{{.TEST}}.tea
    generates:
      - ./tests/tea/{{.TEST}}.tea.md
    cmds:
      - for: sources
        cmd: |
          input="{{toSlash .ITEM}}"
          "{{.TEA_EXE}}" -e:utf-8 -o:md "$input" "$input.md"
          if ! git diff --quiet -- "$input.md"; then
            echo "Test failed: Generated output different than expected. [$input.md]"
            exit 1
          else
            echo "Test passed: Generated output matches expected. [$input.md]"
          fi

  format:
    deps: [build]
    cmds:
      - cmd: git add .
      - cmd: rm *.md
        ignore_error: true
      - cmd: npx --yes markdownlint-cli2@latest --fix "**/*.md" "**/*.readme" "#node_modules"
        ignore_error: true

  # Build the application using MSBuild and the Visual Studio solution files. This
  # path is unique to this fork.
  msbuild:
    deps: []
    silent: true
    vars:
      DEFAULT_SOLUTION: picobat.sln
      MSBUILD:
        sh: | # shell
          strings=("Preview" "Enterprise" "Professional" "Community")
          for str in "${strings[@]}"
          do
            result="C:/Program Files/Microsoft Visual Studio/2022/${str}/MSBuild/Current/Bin/MSBuild.exe"
            if [ -e "$result" ]; then
              echo "$result"
              break
            fi
          done
      MSBUILD_CONFIG: '{{ coalesce .CONFIG .DEFAULT_CONFIG "Debug" }}'
      MSBUILD_PLATFORM: '{{ coalesce .PLATFORM .DEFAULT_PLATFORM "x64" }}'
      MSBUILD_SOLUTION: "{{ joinPath .TASKFILE_DIR (coalesce .SOLUTION .DEFAULT_SOLUTION) }}"
    sources:
      - fento.mk
      - picobat.sln
      - picobat.vcxproj
      - ./**/*.c
      - ./**/*.h
    generates:
      - ./x64/{{.MSBUILD_CONFIG}}/tea.exe
    cmds:
      - cmd: >-
          "{{fromSlash .MSBUILD}}"
          /m
          /t:Build
          /p:Configuration="{{.MSBUILD_CONFIG}}"
          /p:Platform="{{.MSBUILD_PLATFORM}}"
          "{{fromSlash .MSBUILD_SOLUTION}}"
