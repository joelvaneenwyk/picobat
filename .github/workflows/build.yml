name: Build
on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        sys: [linux, mingw64]
        env: [x86_64]
        options:
          - use-libcu8
          - no-libcu8
        include:
          - { sys: mingw32, env: i686 }
          - { sys: ucrt64,  env: ucrt-x86_64 }
          - { sys: clang64, env: clang-x86_64 }

    runs-on: ${{ matrix.sys == 'linux' && 'ubuntu-latest' || 'windows-latest' }}

    # e.g., '⚙️ make use-libcu8 // ubuntu-linux-x86_64'
    name: '⚙️ ${{ matrix.sys }}-${{ matrix.env }} // make ${{ matrix.options }}'

    permissions:
      contents: write
      issues: write
      pull-requests: write

    defaults:
      run:
        # set shell to be either bash or msys2 depending on runner
        shell: ${{ matrix.sys != 'linux' && 'msys2 {0}' || 'bash' }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Install dependencies
        if: matrix.sys == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gettext bison flex

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        if: matrix.sys != 'linux'
        with:
          msystem: ${{ matrix.sys }}
          install: >-
            git zip
            base-devel
            mingw-w64-${{ matrix.env }}-toolchain
            mingw-w64-${{ matrix.env }}-dlfcn

      - name: Configure
        run: |
          make config ${{ matrix.options }}

      - name: Make Distribution
        run: |
          LDFLAGS='-static -s' make dist --keep-going
