name: Build
on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]
  workflow_dispatch:

jobs:
  build:
    runs-on: '${{ matrix.os }}-latest'

    strategy:
      fail-fast: false
      matrix:
        options:
          - use-libcu8
          - no-libcu8
        include:
          - { os: windows, sys: mingw64, env: x86_64 }
          # - { os: windows, sys: mingw32, env: i686 }
          # - { os: windows, sys: ucrt64,  env: ucrt-x86_64 }
          # - { os: windows, sys: clang64, env: clang-x86_64 }

    permissions:
      contents: write
      issues: write
      pull-requests: write

    defaults:
      run:
        # set shell to be either bash or msys2 depending on runner
        shell: ${{ matrix.os == 'windows' && 'msys2 {0}' || 'bash' }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - uses: msys2/setup-msys2@v2
        if: matrix.os == 'windows'
        with:
          msystem: ${{ matrix.sys }}
          install: >-
            git zip
            base-devel
            mingw-w64-${{ matrix.env }}-toolchain
            mingw-w64-${{ matrix.env }}-dlfcn

      - name: Configure
        run: |
          make config ${{ matrix.options }}

      - name: Make Distribution
        run: |
          LDFLAGS='-static -s' make dist --keep-going

      # - uses: marvinpinto/action-automatic-releases@master
      #   with:
      #     repo_token: "${{ secrets.GITHUB_TOKEN }}"
      #     automatic_release_tag: "latest"
      #     prerelease: true
      #     title: "Development Build"
      #     files: |
      #       ./picobat-*.zip
