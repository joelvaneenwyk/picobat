name: Build
on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        sys: [linux, mingw64, mingw32, ucrt64, clang64]
        options: [use-libcu8, no-libcu8]
    name: '⚙️ ${{ matrix.sys }} // ${{ matrix.options }}'
    runs-on: ${{ matrix.sys == 'linux' && 'ubuntu-latest' || 'windows-latest' }}

    permissions:
      contents: write
      issues: write
      pull-requests: write

    defaults:
      run:
        # set shell to be either bash or msys2 depending on runner
        shell: ${{ matrix.sys == 'linux' && 'bash' || 'msys2 {0}' }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Install dependencies
        if: matrix.sys == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gettext bison flex

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        if: matrix.sys != 'linux'
        env:
          MSYS_ENV: ${{ matrix.sys == 'mingw32' && 'i686' || matrix.sys == 'ucrt64' && 'ucrt-x86_64' || matrix.sys == 'clang64' && 'clang-x86_64' || 'x86_64' }}
        with:
          msystem: ${{ matrix.sys }}
          install: >-
            git zip
            base-devel
            mingw-w64-${{ env.MSYS_ENV }}-toolchain
            mingw-w64-${{ env.MSYS_ENV }}-dlfcn

      - name: Configure
        run: |
          make config ${{ matrix.options }}

      - name: Test
        run: |
          make -C libcu8/test

      - name: Make Distribution
        env:
          LDFLAGS: -static -s
        run: |
          make dist --keep-going

  msbuild:
    needs: build
    name: '⚙️ MSBuild'
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Install dependencies
        run: choco install make

      # Required to generate 'config.h' and other dependencies used even in all builds including those
      # using Visual Studio (MSBuild).
      - name: Configure
        run: |
          make config

      - name: Build Solution
        run: msbuild picobat.sln /p:Configuration=Release
